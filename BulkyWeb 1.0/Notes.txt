Controller naming convention 
View+Controller(keyword)

---------------------------------------------------------------------------------------------------------------------------------------------------
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");
	Default esma herne

---------------------------------------------------------------------------------------------------------------------------------------------------	
	
Inside a controller:

public IActionResult Index()
        {

            return View(); //If define garena i.e return View() vane default or action name ma janxa i.e Index
            //return View("Index"); //If define garena i.e return View() vane default or action name ma janxa i.e Index

        }



---------------------------------------------------------------------------------------------------------------------------------------------------

/shared/_Layout
is the master page 
And @RenderBody() will load all the views
Header and Footer esmai define garne ho
---------------------------------------------------------------------------------------------------------------------------------------------------
Inside Model:
the table will automatically be created
to define a field as a primary key we need to put the [Key] as annotation



In nuget manager:
 add-migration AddQuestionsTable
 update-database
 
 --------------------------------------------------------------------------------------------------------------------------
Client Side validation using Partial View as @section Script{
and include _ValidationScriptsPartial
}
--------------------------------------------------------------------------------------------------------------------------
then to pass the ID on button press use
asp-route-id
the id part must be what we have placed in the controller
for example:
public IActionResult Edit(int? id)
        {
            if(id == null||id==0)
            {
                return NotFound();
            }
            Category? categoryFromDB = _db.Categories.FirstOrDefault(c => c.Id == id);
           
            if(categoryFromDB != null)
            {
                return NotFound();
            }
            return View(categoryFromDB);
        }
		
		
--------------------------------------------------------------------------------------------------------------------------		
Multiple ways to pass the Id
we can use Find
or
FirstorDefault(x=>c.id==id);
or even When

--------------------------------------------------------------------------------------------------------------------------
the ? means that it can be nullable
